# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI — Test & Coverage

on:
  push:
    branches: [ main, dev, feature/** ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # ---------------------------------------------------------------------
      # 1) Checkout full git history — important so Codecov can map commits -> branches
      # ---------------------------------------------------------------------
      - name: Checkout code (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ---------------------------------------------------------------------
      # 2) Setup Python
      # ---------------------------------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      # ---------------------------------------------------------------------
      # 3) Install dependencies (adjust to your project's install step)
      # ---------------------------------------------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # ---------------------------------------------------------------------
      # 4) Run tests & produce coverage.xml (never abort before uploader runs)
      #    Note: `|| true` ensures this step won't stop the job so upload runs.
      # ---------------------------------------------------------------------
      - name: Run tests with coverage (produce coverage.xml)
        run: |
          pytest --cov-config=.coveragerc --cov=climate_eof_group_project --cov-report=xml || true

      # ---------------------------------------------------------------------
      # 5) Debug info (very helpful if Codecov says repo is deactivated / branch not found)
      # ---------------------------------------------------------------------
      - name: CI debug info (verify coverage file + git context)
        run: |
          echo "== Workspace =="
          pwd
          ls -la
          echo
          echo "== coverage.xml head =="
          if [ -f coverage.xml ]; then head -n 50 coverage.xml; else echo "NO coverage.xml"; fi
          echo
          echo "== git info =="
          git branch -a || true
          echo "current-branch:" && git rev-parse --abbrev-ref HEAD || true
          echo "commit-sha:" && git rev-parse HEAD || true
          echo "git show (short):" && git show --summary --no-patch HEAD || true

      # ---------------------------------------------------------------------
      # 6) Upload coverage to Codecov
      #    - If you have installed the Codecov GitHub App: you can omit `token`.
      #    - If you use token-based upload: set CODECOV_TOKEN in repo secrets and keep token line.
      #    - `if: always()` ensures this runs even when tests fail.
      # ---------------------------------------------------------------------
      - name: Upload coverage reports to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          # If using the GitHub App, you can safely remove the token: line below.
          token: ${{ secrets.CODECOV_TOKEN }}     # optional if using App; required for token method
          files: coverage.xml
          flags: dev                               # optional: label uploads (useful for filtering)
          # fail_ci_if_error: true  # don't enable until verified; set to false for debugging
          fail_ci_if_error: false

      # ---------------------------------------------------------------------
      # 7) (Optional) Post-run: show uploader logs as step summary (action logs already show it)
      # ---------------------------------------------------------------------
